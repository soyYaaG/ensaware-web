---
import { ViewTransitions } from "astro:transitions";
import { getLangFromUrl } from "../i18n";
import { ChangeLanguage } from "../components";
import "../styles/globals.css";

interface Props {
	title: string;
}

const { title } = Astro.props;
const lang = getLangFromUrl(Astro.url);
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<!doctype html>
<html lang={lang}>
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link
			href="https://fonts.googleapis.com/css2?family=IBM+Plex+Mono&display=swap"
			rel="stylesheet"
		/>
		<link rel="canonical" href={canonicalURL} />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<ViewTransitions fallback="none" />
	</head>
	<body>
		<slot />

		<aside
			class="flex text-xs fixed bottom-8 items-center cursor-pointer -rotate-90"
		>
			{import.meta.env.VERSION}
		</aside>

		<ChangeLanguage client:only />

		<style is:global>
			html {
				font-family: "IBM Plex Mono", monospace, system-ui, sans-serif;
			}
		</style>

		<script>
			import type { IToken } from "../entities";
			import { getLangFromUrl } from "../i18n";
			import { DataBaseKeys, get, getUrl } from "../lib";

			const lang = getLangFromUrl(getUrl());
			const token: IToken | null = await get<IToken>(DataBaseKeys.TOKEN);
			const isLogged =
				location.pathname === `/${lang}` ||
				location.pathname === `/${lang}/`;

			if ((token && isLogged) || (!token && !isLogged)) {
				location.href = isLogged ? `/${lang}/app` : `/${lang}`;
			}
		</script>
	</body>
</html>
